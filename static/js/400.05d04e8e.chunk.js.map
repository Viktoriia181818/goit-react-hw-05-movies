{"version":3,"file":"static/js/400.05d04e8e.chunk.js","mappings":"qPAEO,SAASA,IACd,OACE,uDAC2B,SAAC,KAAD,CAAMC,GAAG,IAAT,uBAA8B,MAG5D,CCFc,SAASC,IACtB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA8BJ,EAAAA,EAAAA,WAAS,GAAvC,eAAOK,EAAP,KAAgBC,EAAhB,MAGAC,EAAAA,EAAAA,YAAU,WAEND,GAAW,IACXE,EAAAA,EAAAA,MACGC,MAAK,SAAAC,GACJR,EAAUQ,EACX,IACAC,OAAM,SAAAR,GACLC,EAAS,kCACTQ,QAAQC,IAAIV,EACb,IACAW,SAAQ,kBAAMR,GAAW,EAAjB,GAGd,GAAE,IAGH,IAAMS,GAAcV,IAAYJ,EAAOe,OACvC,OACE,iCAEI,SAACC,EAAA,EAAD,CAAaC,KAAM,oBAClBb,GAAW,cACXU,IAAc,SAAClB,EAAD,IACdM,IAAS,yBAAMA,IACfF,IAAU,SAACkB,EAAA,EAAD,CAAgBlB,OAAQA,MAI1C,C,sDCxCD,MAAwB,2B,SCCT,SAASgB,EAAT,GAAgC,IAATC,EAAQ,EAARA,KACpC,OAAO,eAAIE,UAAWC,EAAf,SAA2BH,GACnC,C,2CCyBD,IA1BuB,SAAC,GAA8B,IAA5BjB,EAA2B,EAA3BA,OAAQqB,EAAmB,EAAnBA,aAC9B,OACA,+BACE,wBACGrB,EAAOsB,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,eAAP,OACV,yBACE,SAAC,KAAD,CAAM3B,GAAE,kBAAa0B,GAAME,MAAO,CAAEC,KAAML,GAA1C,UACE,wBAAKG,OAFAD,EADC,OAUnB,C,+LCfKI,EAAU,mCAChBC,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EACM,uBADNA,EAES,gBAFTA,EAGU,SAHVA,EAIU,WAJVA,EAKU,WAGHtB,EAAS,mCAAG,yGAAOuB,EAAP,+BAAc,EAAd,SACLF,EAAAA,EAAAA,IAAA,UACbC,EADa,oBACkBF,EADlB,iBACkCG,EADlC,wCADK,cACjBC,EADiB,yBAKhBA,EAAIC,KAAKvB,SALO,2CAAH,qDAQTwB,EAAW,mCAAG,WAAOC,GAAP,4FAAcJ,EAAd,+BAAqB,EAArB,SACPF,EAAAA,EAAAA,IAAA,UACbC,EADa,oBACqBF,EADrB,iBACqCG,EADrC,kBACmDI,EADnD,wCADO,cACnBH,EADmB,yBAKlBA,EAAIC,KAAKvB,SALS,2CAAH,sDAOX0B,EAAe,mCAAG,WAAMZ,GAAN,uFACXK,EAAAA,EAAAA,IAAA,UACbC,EADa,YACcN,EADd,oBAC4BI,EAD5B,oBADW,cACvBI,EADuB,yBAKtBA,EAAIC,MALkB,2CAAH,sDASfI,EAAkB,mCAAG,WAAMb,GAAN,uFACdK,EAAAA,EAAAA,IAAA,iBACNL,GADM,OACDM,EADC,oBACkCF,EADlC,oBADc,cAC1BI,EAD0B,yBAKzBA,EAAIC,KAAKK,MALgB,2CAAH,sDAUlBC,EAAkB,mCAAG,WAAOf,GAAP,4FAAWO,EAAX,+BAAkB,EAAlB,SACdF,EAAAA,EAAAA,IAAA,iBACNL,GADM,OACDM,EADC,oBACkCF,EADlC,gCACiEG,IAFnD,cAC1BC,EAD0B,yBAKzBA,EAAIC,KAAKvB,SALgB,2CAAH,qD","sources":["notfound/NotFound.jsx","components/HomePage/HomePage.jsx","webpack://react-homework-template/./src/components/PageHeading/PageHeading.module.css?b132","components/PageHeading/PageHeading.jsx","components/TrendingMovies/TrendingMovies.jsx","services/Services.jsx"],"sourcesContent":["import { Link } from 'react-router-dom';\n\nexport function NotFound() {\n  return (\n    <h1>\n      Page is not found  Go to <Link to=\"/\">Home page</Link>{' '}\n    </h1>\n  );\n}","import PageHeading from 'components/PageHeading/PageHeading';\nimport TrendingMovies from 'components/TrendingMovies/TrendingMovies';\nimport { useEffect, useState } from 'react';\nimport { getMovies } from 'services/Services';\nimport { NotFound } from 'notfound/NotFound';\n\nexport default function GetTrendingMovies() {\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n\n  useEffect(() => {\n    const fetchTrendingMovies = () => {\n      setLoading(true);\n      getMovies()\n        .then(results => {\n          setMovies(results);\n        })\n        .catch(error => {\n          setError('Ooops. Something went wrong...');\n          console.log(error);\n        })\n        .finally(() => setLoading(false));\n    };\n    fetchTrendingMovies();\n  }, []);\n\n \n  const isNotFound = !loading && !movies.length;\n  return (\n    <>\n      \n        <PageHeading text={'Trending Movies'}></PageHeading>\n        {loading && 'Loading ...'}\n        {isNotFound && <NotFound />}\n        {error && <div>{error}</div>}\n        {movies && <TrendingMovies movies={movies} />}\n      \n    </>\n  );\n}","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"PageHeading_title__1wPIF\"};","import css from './PageHeading.module.css';\n\nexport default function PageHeading({ text }) {\n  return <h1 className={css.title}>{text}</h1>;\n}","import PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nconst TrendingMovies = ({ movies, prevLocation }) => {\n    return (\n    <>\n      <ul>\n        {movies.map(({ id, original_title }) => (\n          <li key={id}>\n            <Link to={`/movies/${id}`} state={{ from: prevLocation }}>\n              <h3>{original_title}</h3>\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nTrendingMovies.propTypes = {\n  // prevLocation: PropTypes.object.isRequired,\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      original_title: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n\nexport default TrendingMovies;","import axios from 'axios';\n\nconst API_KEY = 'cac697c754ad6f0605a4a59a65079c98';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst END_POINTS = {\n  trending: '/trending/movie/week',\n  querySearch: '/search/movie',\n  movieDetails: '/movie',\n  movieCredits: '/credits',\n  movieReviews: '/reviews',\n};\n\nexport const getMovies = async (page = 1) => {\n  const res = await axios.get(\n    `${END_POINTS.trending}?api_key=${API_KEY}&page=${page}&language=en-US&include_adult=false`\n  );\n\n  return res.data.results;\n};\n\nexport const queryMovies = async (query, page = 1) => {\n  const res = await axios.get(\n    `${END_POINTS.querySearch}?api_key=${API_KEY}&page=${page}&query=${query}&language=en-US&include_adult=false`\n  );\n\n  return res.data.results;\n};\nexport const getMovieDetails = async id => {\n  const res = await axios.get(\n    `${END_POINTS.movieDetails}/${id}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return res.data;\n};\n\n\nexport const fetchMoviesCredits = async id => {\n  const res = await axios.get(\n    `/movie/${id}${END_POINTS.movieCredits}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return res.data.cast;\n};\n\n\n\nexport const fetchMoviesReviews = async (id, page = 1) => {\n  const res = await axios.get(\n    `/movie/${id}${END_POINTS.movieReviews}?api_key=${API_KEY}&language=en-US&page=${page}`\n  );\n\n  return res.data.results;\n};\n\n\n\n\n"],"names":["NotFound","to","GetTrendingMovies","useState","movies","setMovies","error","setError","loading","setLoading","useEffect","getMovies","then","results","catch","console","log","finally","isNotFound","length","PageHeading","text","TrendingMovies","className","css","prevLocation","map","id","original_title","state","from","API_KEY","axios","END_POINTS","page","res","data","queryMovies","query","getMovieDetails","fetchMoviesCredits","cast","fetchMoviesReviews"],"sourceRoot":""}