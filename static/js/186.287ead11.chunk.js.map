{"version":3,"file":"static/js/186.287ead11.chunk.js","mappings":"yNAuCA,UAnCgB,WACZ,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QAER,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAY,mCAAG,8GAEQC,EAAAA,EAAAA,IAAmBT,GAF3B,OAEPU,EAFO,OAGbN,EAAWM,GAHE,gDAKbJ,EAAS,EAAD,IALK,yDAAH,qDAQlBE,GACH,GAAE,CAACR,KAGA,gCACCK,IAAS,oCACV,wBACAF,EAAQQ,KAAI,SAAAC,GACV,OACE,2BACE,oCAAYA,EAAOC,WACnB,uBAAID,EAAOE,YAFJF,EAAOG,GAKnB,QAIR,C,+LCnCKC,EAAU,mCAChBC,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EACM,uBADNA,EAES,gBAFTA,EAGU,SAHVA,EAIU,WAJVA,EAKU,WAGHC,EAAS,mCAAG,yGAAOC,EAAP,+BAAc,EAAd,SACLH,EAAAA,EAAAA,IAAA,UACbC,EADa,oBACkBF,EADlB,iBACkCI,EADlC,wCADK,cACjBC,EADiB,yBAKhBA,EAAIC,KAAKC,SALO,2CAAH,qDAQTC,EAAW,mCAAG,WAAOC,GAAP,4FAAcL,EAAd,+BAAqB,EAArB,SACPH,EAAAA,EAAAA,IAAA,UACbC,EADa,oBACqBF,EADrB,iBACqCI,EADrC,kBACmDK,EADnD,wCADO,cACnBJ,EADmB,yBAKlBA,EAAIC,KAAKC,SALS,2CAAH,sDAOXG,EAAe,mCAAG,WAAMX,GAAN,uFACXE,EAAAA,EAAAA,IAAA,UACbC,EADa,YACcH,EADd,oBAC4BC,EAD5B,oBADW,cACvBK,EADuB,yBAKtBA,EAAIC,MALkB,2CAAH,sDASfK,EAAkB,mCAAG,WAAMZ,GAAN,uFACdE,EAAAA,EAAAA,IAAA,iBACNF,GADM,OACDG,EADC,oBACkCF,EADlC,oBADc,cAC1BK,EAD0B,yBAKzBA,EAAIC,KAAKM,MALgB,2CAAH,sDAUlBnB,EAAkB,mCAAG,WAAOM,GAAP,4FAAWK,EAAX,+BAAkB,EAAlB,SACdH,EAAAA,EAAAA,IAAA,iBACNF,GADM,OACDG,EADC,oBACkCF,EADlC,gCACiEI,IAFnD,cAC1BC,EAD0B,yBAKzBA,EAAIC,KAAKC,SALgB,2CAAH,qD","sources":["components/Reviews/Reviews.jsx","services/Services.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMoviesReviews } from 'services/Services';\n\nconst Reviews = () => {\n    const { movieId } = useParams();\n\n    const [reviews, setReviews] = useState([]);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        const fetchReviews = async () => {\n            try {\n                const result = await fetchMoviesReviews(movieId);\n                setReviews(result);\n            } catch(error) {\n                setError(error);\n            }\n        }\n        fetchReviews()\n    }, [movieId]);\n\n    return (\n        <>\n        {error && <div>error</div>}\n        <ul>\n       {reviews.map(review => {\n          return (\n            <li key={review.id}>\n              <p>Author: {review.author}</p>\n              <p>{review.content}</p>\n            </li>\n          );\n        })}\n      </ul>\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst API_KEY = 'cac697c754ad6f0605a4a59a65079c98';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst END_POINTS = {\n  trending: '/trending/movie/week',\n  querySearch: '/search/movie',\n  movieDetails: '/movie',\n  movieCredits: '/credits',\n  movieReviews: '/reviews',\n};\n\nexport const getMovies = async (page = 1) => {\n  const res = await axios.get(\n    `${END_POINTS.trending}?api_key=${API_KEY}&page=${page}&language=en-US&include_adult=false`\n  );\n\n  return res.data.results;\n};\n\nexport const queryMovies = async (query, page = 1) => {\n  const res = await axios.get(\n    `${END_POINTS.querySearch}?api_key=${API_KEY}&page=${page}&query=${query}&language=en-US&include_adult=false`\n  );\n\n  return res.data.results;\n};\nexport const getMovieDetails = async id => {\n  const res = await axios.get(\n    `${END_POINTS.movieDetails}/${id}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return res.data;\n};\n\n\nexport const fetchMoviesCredits = async id => {\n  const res = await axios.get(\n    `/movie/${id}${END_POINTS.movieCredits}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return res.data.cast;\n};\n\n\n\nexport const fetchMoviesReviews = async (id, page = 1) => {\n  const res = await axios.get(\n    `/movie/${id}${END_POINTS.movieReviews}?api_key=${API_KEY}&language=en-US&page=${page}`\n  );\n\n  return res.data.results;\n};\n\n\n\n\n"],"names":["movieId","useParams","useState","reviews","setReviews","error","setError","useEffect","fetchReviews","fetchMoviesReviews","result","map","review","author","content","id","API_KEY","axios","END_POINTS","getMovies","page","res","data","results","queryMovies","query","getMovieDetails","fetchMoviesCredits","cast"],"sourceRoot":""}